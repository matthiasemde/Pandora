name: Update Docker Image SHA256 Hashes

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: write
  pull-requests: write

jobs:
  update-hashes:
    name: Update Docker SHA256 Hashes
    # Only run on PRs with titles starting with "chore(deps)"
    if: startsWith(github.event.pull_request.title, 'chore(deps)')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout PR branch
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Fetch base branch
        run: |
          git fetch origin \
            ${{ github.event.pull_request.base.ref }}:refs/remotes/origin/${{ github.event.pull_request.base.ref }}

      - name: Install Nix
        uses: cachix/install-nix-action@v27
        with:
          extra_nix_config: |
            experimental-features = nix-command flakes

      - name: Update Docker image hashes
        id: update
        env:
          GITHUB_BASE_REF: ${{ github.event.pull_request.base.ref }}
        run: |
          set +e  # Don't exit on error, we want to check the exit code
          ./.github/scripts/update-docker-hashes.sh
          exit_code=$?

          if [ $exit_code -eq 0 ]; then
            # Script exited with 0 = changes were made
            echo "changes=true" >> $GITHUB_OUTPUT
          elif [ $exit_code -eq 1 ]; then
            # Script exited with 1 = no changes needed (this is OK)
            echo "changes=false" >> $GITHUB_OUTPUT
          else
            # Script exited with other code = actual error
            echo "Error: Script failed with exit code $exit_code"
            exit $exit_code
          fi

      - name: Validate flake syntax
        if: steps.update.outputs.changes == 'true'
        run: |
          echo "Validating modified flake files..."
          for flake in services/*/flake.nix; do
            if git diff --name-only HEAD | grep -q "$flake"; then
              echo "Checking $flake..."
              # Basic syntax check using nix-instantiate
              nix-instantiate --parse "$flake" > /dev/null || {
                echo "Error: Invalid Nix syntax in $flake"
                exit 1
              }
            fi
          done

      - name: Commit and push changes
        if: steps.update.outputs.changes == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add services/*/flake.nix
          git commit -m "chore: update Docker image SHA256 hashes"
          git push
